import { CustomButton } from '@/components/Button';
import { ThemedText } from '@/components/ThemedText';
import { ThemedView } from '@/components/ThemedView';
import { StyleSheet, useColorScheme, View } from 'react-native';
import { Image } from 'expo-image';
import * as FileSystem from 'expo-file-system';
import { CustomTextInput } from '@/components/TextInput';
import { useGenerateImage } from '@/hooks/useGenerateImage';
import { Ionicons } from '@expo/vector-icons';
import { useState } from 'react';
import { colors } from '@/constants/theme';
import { ScrollView } from 'react-native-gesture-handler';
import FalIcon from '@/components/svg/falai';
import { Skeleton } from 'moti/skeleton';

const blurhash = '|rF?hV%2WCj[ayj[a|j[az_NaeWBj@ayfRayfQfQM{M|azj[azf6fQfQfQIpWXofj[ayj[j[fQayWCoeoeaya}j[ayfQa{oLj?j[WVj[ayayj[fQoff7azayj[ayj[j[ayofayayayj[fQj[ayayj[ayfjj[j[ayjuayj[';

export default function ImagesScreen() {
  const { generateImageUsingAi, imageAiModels, setImageAiModels, generatedImage, loading, setInput, input } = useGenerateImage();
  const [inputHeight, setInputHeight] = useState<number>(0);
  const colorScheme: any = useColorScheme();
  console.log(loading);

  return (
    <ThemedView style={styles.container}>
      {!loading && generatedImage?.length === 0 ? (
        <View style={styles.flexCenter}>
          <FalIcon width={200} height={200} fill={colorScheme === 'dark' ? '#414141' : '#adadad'} />
          <ThemedText type="subtitle">Turn your imagination to imagery</ThemedText>
        </View>
      ) : (
        <ScrollView>
          {generatedImage?.map((item) => (
            <View style={{ display: 'flex', alignItems: 'flex-end' }} key={item.requestId}>
              <ThemedView type="assistant" style={styles.prompt}>
                <ThemedText type="subtitle">{item.prompt}</ThemedText>
              </ThemedView>
              <ThemedView style={[styles.imageCard, { borderColor: colorScheme === 'dark' ? colors.lightBlack : colors.whitesmoke }]}>
                {/* <Image source={{ uri: item?.images[0]?.url, method: 'POST' }} width={item?.images[0]?.width} height={item?.images[0]?.height} style={{ flex: 1, width: null, height: null, resizeMode: 'cover' }} /> */}
                <Image style={{ flex: 1, resizeMode: 'cover', width: '100%', height: 'auto' }} source={item?.images[0]?.url} placeholder={{ blurhash }} contentFit="cover" />
                <ThemedText type="subtitle" style={{ padding: 10, color: 'gray' }}>
                  Generated by Fal.ai
                </ThemedText>
              </ThemedView>
            </View>
          ))}
          {loading && (
            <View style={{ paddingTop: 20 }}>
              <Skeleton colorMode={colorScheme} radius={14} height={200} width={'100%'} />
            </View>
          )}
        </ScrollView>
      )}

      <View style={styles.inputContainer}>
        <CustomTextInput multiline={true} style={styles.textInput} onChangeText={setInput} onContentSizeChange={(event) => setInputHeight(event.nativeEvent.contentSize.height)} value={input} placeholder="Make something unique!" />

        <CustomButton
          style={[styles.button, { height: Math.max(35, inputHeight) }]}
          onPress={() => generateImageUsingAi('Photo of a rhino dressed suit and tie sitting at a table in a bar with a bar stools, award winning photography, Elke vogelsang')}
        >
          <Ionicons name="send" color={colorScheme === 'light' ? 'dark' : 'white'} size={18} />
        </CustomButton>
      </View>
    </ThemedView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    display: 'flex',
    justifyContent: 'space-between',
    gap: 10,
    padding: 18,
  },
  flexCenter: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    alignContent: 'center',
  },
  imageCard: {
    height: 400,
    width: '100%',
    borderRadius: 12,
    borderWidth: 2,
    marginTop: 10,
    overflow: 'hidden',
  },
  textInput: {
    flex: 1,
    borderWidth: 2,
    borderRadius: 12,
    padding: 12,
  },
  inputContainer: {
    position: 'relative',
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    gap: 10,
  },
  prompt: {
    width: '95%',
    borderRadius: 12,
    padding: 12,
    marginTop: 10,
  },
  button: {
    position: 'absolute',
    backgroundColor: 'transparent',
    right: 12,
    top: 15,
  },
});
